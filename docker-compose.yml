networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=123456
      - POSTGRES_USER=postgres
    ports:
      - 5432:5432
    volumes:
      - ./db/pgdata:/var/lib/postgresql/data
    networks:
      custom:
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123456
    ports:
      - 27017:27017
    volumes:
      - ./db/mongodb_data:/var/lib/mongodb/data
    networks:
      custom:
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    ports:
      - 5672:5672 #main port
      - 15672:15672 #management port
    networks:
      custom:
  auction-svc:
    image: 1811063460/auction-svc:latest
    build:
      context: .
      dockerfile: src/AuctionService/dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:6666
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;User Id=postgres;Password=123456;Database=auction;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:6666
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 5073:80
      - 6666:6666
    networks:
      custom:
    depends_on:
      - postgres
      - rabbitmq
  search-svc:
    image: 1811063460/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDb=mongodb://root:123456@mongodb
      - AuctionServiceUrl=http://auction-svc
    ports:
      - 5289:80
    networks:
      custom:
    depends_on:
      - mongodb
      - rabbitmq
  identity-svc:
    image: 1811063460/identity-svc:latest
    build:
      context: .
      dockerfile: src/IdentityService/dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;User Id=postgres;Password=123456;Database=identity;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100
      - AllowedIPAddress=::1;::1
      - ClientApp=https://app.carsties.com
      - VIRTUAL_HOST=id.carsties.com
    networks:
      custom:
        ipv4_address: 10.5.0.200
    depends_on:
      - postgres
  gateway-svc:
    image: 1811063460/gateway-svc:latest
    build:
      context: .
      dockerfile: src/GatewayService/dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=https://app.carsties.com
      - VIRTUAL_HOST=api.carsties.com
    networks:
      custom:
  bid-svc:
    image: 1811063460/bid-svc:latest
    build:
      context: .
      dockerfile: src/BiddingService/dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__BiddingConnection=mongodb://root:123456@mongodb
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:6666
    ports:
      - 5280:80
    networks:
      custom:
    depends_on:
      - mongodb
      - rabbitmq
  notify-svc:
    image: 1811063460/notify-svc:latest
    build:
      context: .
      dockerfile: src/NotifService/dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 5179:80
    networks:
      custom:
    depends_on:
      - rabbitmq
  web-app:
    image: 1811063460/web-app
    build:
      context: .
      dockerfile: frontend/web-app/dockerfile
    volumes:
      - /var/lib/web/data
    networks:
      custom:
    extra_hosts:
      - id.carsties.com:10.5.0.200
    environment:
      - NODE_ENV=production
      - GATE_WAY_SERVICE_URI=http://gateway-svc
      - GATE_WAY_SERVICE_URI_PRODUCTION=https://api.carsties.com
      - IDENTITY_SERVICE_URL=http://id.carsties.com
      - NEXTAUTH_SECRET=somethingreallyreallysecret
      - NEXTAUTH_URL=https://app.carsties.com #Change this to match with VIRTUAL_HOST
      - NEXTAUTH_URL_INTERNAL=http://web-app:3000
      - VIRTUAL_HOST=app.carsties.com # This is for nginx
      - VIRTUAL_PORT=3000 # This is for nginx
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
      - 443:443 # this is port for ssl on nginx proxy
    networks:
      - custom
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./dev-certs:/etc/nginx/certs # location contains certs file for ssl
volumes:
  pgdata:
  mongodb_data:
